#ifdef RESOURCE_HEADERS

#include "animation/armature.hpp"
#include "animation/clip.hpp"
#include "audio/sound.hpp"
#include "collision/shape.hpp"
#include "game/physicalmaterial.hpp"
#include "game/physicalmaterialpair.hpp"
#include "nodes//compositionnodelogicgroup.hpp"
#include "nodes//nodeeventtype.hpp"
#include "nodes//nodetype.hpp"
#include "game/world_gen/workertype.hpp"
#include "game/worldentity.hpp"
#include "physics/entity_def.hpp"
#include "physics/material.hpp"
#include "visual/shadertemplate.hpp"
#include "visual/material.hpp"
#include "visual/mesh.hpp"
#include "visual/model.hpp"
#include "visual/entity_def.hpp"
#include "visual/entity_def_compound.hpp"
#include "visual/entity_def_light.hpp"
#include "visual/entity_def_model.hpp"
#include "script/module.hpp"

#else

// All resource types that resources::Cache will use
// Determines also loading order

// RESOURCE(type_name, auto_preload)
RESOURCE(animation::Armature, true)
RESOURCE(animation::Clip, true)
RESOURCE(visual::ShaderTemplate, false)
RESOURCE(visual::Texture, false)
RESOURCE(visual::Material, false)
RESOURCE(visual::TriMesh, false)
RESOURCE(visual::Model, false)
RESOURCE(visual::EntityDef, false)
RESOURCE(visual::ModelEntityDef, false)
RESOURCE(visual::LightEntityDef, false)
RESOURCE(visual::CompoundEntityDef, false)
RESOURCE(audio::Sound, true)
RESOURCE(game::PhysicalMaterial, true)
RESOURCE(game::PhysicalMaterialPair, true)
RESOURCE(collision::Shape, true)
RESOURCE(physics::EntityDef, true)
RESOURCE(script::Module, true)
RESOURCE(nodes::NodeEventType, true)
RESOURCE(nodes::NodeType, true)
RESOURCE(nodes::CompositionNodeLogicGroup, true)
RESOURCE(game::WeType, true)
RESOURCE(game::world_gen::WorkerType, true)

#endif
